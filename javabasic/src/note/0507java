### 내부클래스 (inner class)
클래스 내에 클래스를 선언하여 사용. 
Why?
 1)클래스 내부에서만 사용하느 데이터/기능들을 캡슐화하기 위한 목적. 
  =클래스 내부에서만 사용하느 데이터/기능들을 클래스 내부에만 두겠다. 
 2)익명 내부클래스 (anonymous inner class) 한번만 사용할 객체를 생성하기 위해서 
 *내부클래스 분류 
 1)non-static inner class : 외부클래스에 non-static 맴버변수레벨
 2)static inner class : 외부클래스의 static 멤버변수 레벨
 3)local inner class (잘안씀) : 메소드 내에 선언 해서 메소드 수행이 종료되면 사멸 
*4)anonymous inner class  :일반적으로 이벤트 처리시 이벤트 처리함수(이벤트 핸들러) 로 사용 되는 이름없느 클래스 
 
 *내부클래스는 꼭 필요한 경우 또는 사용하여 큰 이점이 있는 경우에만 한정적으로 사용하는 것이 객체지향 설계를 깨지 않는 습관임..
 디렉토리 찾으면 outer$LInner  
 

### 예외처리 (exception handling)

최상위  throwable 
*에러(Error) 와 예외(exception)
1) 에러: 프로그래머가 코드로 처리할수 없는 오류 ( 네트워크 장애 , 파일장애, 데이터베이스장애 ,메모리부족)

2) 예외: 프로그래머가 코드로 처리할수 있는 오류 
*runtimeException, IOException, SQLException 주로 발생,,, 주목

*****프로그램상에서 발생가능한 모든 예외는 "무조건" 처리해야 한다. 



*예외 처리 구문 
1) try {} : 예외발생가능한 코드 블록
2) catch (예외 클래스) {} : 예외처리 블록, 1개 이상
3) finally {}
	:예외발생여부에 상관없이 무조건 수행되는 코드 블록 	
	:예) 예외발생해도 데이터베이스 커넥션을 닫아야 하는 경우 
	
	외부작업이후엔 데이터베이스 커넥션 개체들을 클로즈 작업을 꼭 해야 하는 습관을 가진다. 
	
*예외처리는 catch 구문에서 일어나는데 하위 익셉션 >상위익셉션 순으로 catch 구문을 작성해야 한다. 
 try{
 	int i = 100 /0; //DevideByZeroException 발생
 	} 
 	catch (DevideByZeroException dbze){
 	//발생한 예외처리
 	}
 	catch (Exception ex){
 	//DevideByZeroException을 제외한 모든 예외를 처리 
 	}

*예외처리 원칙은 try 구문에서 발생할 수 있는 모든 예외에 대해 각각 catch 절에서 처리해주는것
*throws : 호출한 쪽에 예외처리를 맡김. 위임
*throw : 예외를 강제로 발생시킬때 사용하는 키워드 
*사용자 정의 예외 (User defined exception)
: exception 클래스를 상속받아서 예외를 생성해서 사용하는 것 
 : 예) 영화관람연령제한, 비행기 연착 시점. 
 
 


### 컬렉션 프레임워크 (collection framework)

컬렉션 프레임 워크: 자바에서 참조타입의 모음을 정의한것 
크기 collection 인터페이스와 Map 인터페이스로 구분
컬렉션인터페이스는 리스트(list)인터페이스와 셋(set)인터페이스 계열로 구분

**List 
순서(인덱스)가 있고, 중복된 값 저장가능
 (크기에 대한 제약이 없이 확장성있다/
 기본타입 외에도 참조타입 담을 수 있다 but 제네릭으로 한정<000> -> 꺼낼때 형변환은 연산이 오래걸리기 떄문에 통일해서 담아라) 
 
크게 ArrayList,LinkedList
ArraylList: 연속적으로 데이터를 저장, 저장된 값 검색시 빠름 
LinkedList: 서로 떨어진 위치에서 서로의 위치를 참조하는 방식으로 저장 , 검색이 느림, 요소를 추가, 삭제 변경이 빠름
검색이 많은 작업시는 ArrayList사 속도면에서 유리, 
추가/삭제 /변경이 많은 작업시에 Linkedlist 가 유리 


**Set 
순서가 없고, 중복된값 저장 불가
크게 HashSet, SortedSet정도가 사용됨

**Map 
순서가 없고 중복 : 키는 중복불가,, 값은 중복가능 
키와 값을 합쳐서 맵엔트리(Map.Entry) 라고 함
맵은 엔트리들의 집합, 맵의 최소단위는 엔트리
맵은 다수의 객체를 값으로 저장하고 키를 통해서 빠른 검색을 하기 위한 자료구조 
HashMap이 가장 많이 사용됨

[이름 관례]
~main 
~factory

메소드는 동사로 네이밍 
3개의 정수 평균 구하는 메소드 : calcurateAveregeOfThreeInteger.

변수는 명사형 
 







