0503 java

### 인터페이스 (interface)


*인터페이스 - 스프링 
  : 설계           / 클래스 : 구현(implements)
 - 서로 다른 개체들간의 연결을 위해 존재하는 모든 것들. 
 - 연결(connection),역할(roll): 서로를 연결해서 어떤 역할을 하게 만드는 모든 것들
 - 인터페이스는 하위클래스들의 설계에 해당하는 것 
 - 생성자가 당연히 없고 , 객체생성이 불가능하다. 
 - 인터페이스는 인터페이스를 상속받을수 있다. 
 - 클래스는 인터페이스를 구현할수 있다 .
 - 클래스는 클래스를 상속받을수 있다. 
 - 문법 
  public interface 인터페이스 명 {
  	//상수
  	//추상메소드의 시그니쳐 
 }
 - 예시 
  public interface Monitor{
	public static final int INCH_TWENTYFOUR = 24;
	public static final int INCH_THIRTY = 30;
	public static final int INCH_FOURTY = 40;
	abstract int getInch(); //추상 메소드의 시그니쳐만 선언, 구현은 하위에서, 메소드의 설계.  
	
}

*추상메소드(abstract method)
 하위에서 구현하게 하기 위한 목적을 가진 메소드 시그니쳐 
 메소드 앞에 abstract 키워드를 붙이면 추상메소드
 추상메소드는 구현불가  {} (X) , ;으로 끝남(O)




### 추상클래스 (abstract class)
-반설계 반구현
-아직까지 설계대로 전체 메소드(기능)를 다 구현할수 없는 경우
-일반클래스(구체클래스=concrete class)에서 추상클래스를 상속받아 추상클래스에서 미구현한 메소드들을 모두 구현하여 객체를 생성 
-만약에 클래스에 하나라도 추상메소드가 있으면 추상클래스여야한다. = 객체생성불가

*비어있는 추상메소드도 추상클래스로 취급받음



### 내부클래스 (inner class) 




















